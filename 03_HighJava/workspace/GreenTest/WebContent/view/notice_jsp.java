/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2024-02-17 08:12:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import notice.vo.NoticeVO;
import java.util.List;
import post.vo.PostVO;

public final class notice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("notice.vo.NoticeVO");
    _jspx_imports_classes.add("post.vo.PostVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>고객센터</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("  <!-- <script src=\"../js/jquery-3.7.1.min.js\"></script> -->\r\n");
      out.write("  <script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("  <style>\r\n");
      out.write("  .navbar-toggler{\r\n");
      out.write("  width : 200px;\r\n");
      out.write("  }\r\n");
      out.write("  </style>\r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("  $(document).ready(function(){\r\n");
      out.write("\t  $.ajax({\r\n");
      out.write("\t      // location.href = \"");
      out.print(request.getContextPath());
      out.write("/noticeList.do\"\r\n");
      out.write("\t      url: \"");
      out.print(request.getContextPath());
      out.write("/noticeList.do\", // 올바른 AJAX 요청을 위해 url 속성을 사용하세요.\r\n");
      out.write("\t      method: \"GET\", // 요청 메소드를 지정합니다. 이 예제에서는 GET을 사용하였습니다.\r\n");
      out.write("\t      success: function(response) {\r\n");
      out.write("\t          console.log(\"AJAX 요청 성공:\", response); // AJAX 요청이 성공할 때 실행되는 콜백 함수입니다.\r\n");
      out.write("\t      },\r\n");
      out.write("\t      error: function(xhr, status, error) {\r\n");
      out.write("\t          console.error(\"AJAX 요청 실패:\", error); // AJAX 요청이 실패할 때 실행되는 콜백 함수입니다.\r\n");
      out.write("\t      }\r\n");
      out.write("\t  });\r\n");
      out.write("\t  $('#btn1').on('click', function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/view/noticeWriter.jsp\"\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\r\n");
      out.write("\t});\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \t\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	List<NoticeVO> noticeList = (List<NoticeVO>)request.getAttribute("noticeList");
	System.out.print("noticeList =======>" + noticeList);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid mt-3\">\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("</div>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-sm bg-light\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("  \r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#mynavbar\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"mynavbar\">\r\n");
      out.write("      <ul class=\"navbar-nav me-auto\">\r\n");
      out.write("         <li class=\"nav-item\">\r\n");
      out.write("  \r\n");
      out.write("      </ul>\r\n");
      out.write("      <form class=\"d-flex\">\r\n");
      out.write("        <input class=\"form-control me-2\" type=\"text\" placeholder=\"Search\">\r\n");
      out.write("   \r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<table class=\"table table-striped\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t<th>작성자</th>\r\n");
      out.write("\t\t\t\t\t<th>작성일</th>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\r\n");
      out.write(" ");


	for(NoticeVO noticevo : noticeList){

      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td >");
      out.print(noticevo.getNotice_no() );
      out.write("</td>\r\n");
      out.write("\t\t\t <td ><a href=\"");
      out.print(request.getContextPath());
      out.write("/noticedetail.do?no=");
      out.print(noticevo.getNotice_no() );
      out.write('"');
      out.write('>');
      out.print(noticevo.getNotice_title() );
      out.write("</a></td> \r\n");
      out.write("\t\t\t<td>");
      out.print(noticevo.getAdmin_id() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(noticevo.getNotice_date() );
      out.write("</td>\r\n");
      out.write("\t\r\n");
      out.write("\t\t</tr>\r\n");

	}

      out.write("   \r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<hr/>\r\n");
      out.write("\t\t<button type=\"button\" class=\"btn btn-success\" style=\"float:right;\" id=\"btn1\">글쓰기</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<ul class=\"pagination justify-content-center\">\r\n");
      out.write("  \r\n");
      out.write("    <li class=\"page-item\">\r\n");
      out.write("      <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n");
      out.write("        <span aria-hidden=\"true\">&laquo;</span>\r\n");
      out.write("      </a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">4</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">5</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">6</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">7</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">8</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">9</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">10</a></li>\r\n");
      out.write("    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">11</a></li>\r\n");
      out.write("    <li class=\"page-item\">\r\n");
      out.write("      <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n");
      out.write("        <span aria-hidden=\"true\">&raquo;</span>\r\n");
      out.write("      </a>\r\n");
      out.write("    </li>\r\n");
      out.write("  </ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"./js/jquery-3.1.1.js\"></script>\r\n");
      out.write("\t<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
